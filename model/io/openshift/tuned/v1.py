# generated by datamodel-codegen:
#   filename:  openapi-v2.json
#   timestamp: 2021-04-29T07:54:09+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, conint, constr

from ...k8s.apimachinery.pkg.apis.meta import v1


class Config(BaseModel):
    debug: Optional[bool] = Field(
        None, description='option to debug Tuned daemon execution'
    )
    tunedProfile: str = Field(..., description='Tuned profile to apply')


class Spec(BaseModel):
    config: Config


class Status(BaseModel):
    bootcmdline: Optional[str] = Field(
        None,
        description='kernel parameters calculated by tuned for the active Tuned profile',
    )
    stalld: Optional[bool] = Field(
        None, description='deploy stall daemon: https://github.com/bristot/stalld/'
    )


class ProfileItem(BaseModel):
    data: str = Field(
        ...,
        description='Specification of the Tuned profile to be consumed by the Tuned daemon.',
    )
    name: str = Field(
        ...,
        description='Name of the Tuned profile to be used in the recommend section.',
    )


class Type(Enum):
    node = 'node'
    pod = 'pod'


class MatchItem(BaseModel):
    label: str = Field(..., description='Node or Pod label name.')
    match: Optional[List[Any]] = Field(
        None,
        description='Additional rules governing application of the tuned profile connected by logical AND operator.',
    )
    type: Optional[Type] = Field(
        None, description='Match type: [node/pod]. If omitted, "node" is assumed.'
    )
    value: Optional[str] = Field(
        None,
        description='Node or Pod label value. If omitted, the presence of label name is enough to match.',
    )


class Operand(BaseModel):
    debug: bool = Field(
        ...,
        description='turn debugging on/off for the Tuned daemon: true/false (default is false)',
    )


class RecommendItem(BaseModel):
    machineConfigLabels: Optional[Dict[str, str]] = Field(
        None,
        description="MachineConfigLabels specifies the labels for a MachineConfig. The MachineConfig is created automatically to apply additional host settings (e.g. kernel boot parameters) profile 'Profile' needs and can only be applied by creating a MachineConfig. This involves finding all MachineConfigPools with machineConfigSelector matching the MachineConfigLabels and setting the profile 'Profile' on all nodes that match the MachineConfigPools' nodeSelectors.",
    )
    match: Optional[List[MatchItem]] = Field(
        None,
        description='Rules governing application of a Tuned profile connected by logical OR operator.',
    )
    operand: Optional[Operand] = Field(
        None, description='Optional operand configuration.'
    )
    priority: conint(ge=0) = Field(
        ..., description='Tuned profile priority. Highest priority is 0.'
    )
    profile: str = Field(..., description='Name of the Tuned profile to recommend.')


class SpecModel(BaseModel):
    managementState: Optional[
        constr(regex=r'^(Managed|Unmanaged|Force|Removed)$')
    ] = Field(
        None,
        description='managementState indicates whether the registry instance represented by this config instance is under operator management or not.  Valid values are Force, Managed, Unmanaged, and Removed.',
    )
    profile: List[ProfileItem] = Field(..., description='Tuned profiles.')
    recommend: List[RecommendItem] = Field(
        ..., description='Selection logic for all Tuned profiles.'
    )


class Profile(BaseModel):
    apiVersion: Optional[str] = Field(
        None,
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources',
    )
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds',
    )
    metadata: Optional[v1.ObjectMetaV2] = Field(
        None,
        description="Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
    )
    spec: Optional[Spec] = None
    status: Optional[Status] = Field(
        None,
        description='ProfileStatus is the status for a Profile resource; the status is for internal use only and its fields may be changed/removed in the future.',
    )


class ProfileList(BaseModel):
    apiVersion: Optional[str] = Field(
        None,
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources',
    )
    items: List[Profile] = Field(
        ...,
        description='List of profiles. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md',
    )
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds',
    )
    metadata: Optional[v1.ListMeta] = Field(
        None,
        description='Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds',
    )


class Tuned(BaseModel):
    apiVersion: Optional[str] = Field(
        None,
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources',
    )
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds',
    )
    metadata: Optional[v1.ObjectMetaV2] = Field(
        None,
        description="Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
    )
    spec: Optional[SpecModel] = Field(
        None,
        description='spec is the specification of the desired behavior of Tuned. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status',
    )
    status: Optional[Dict[str, Any]] = Field(
        None, description='TunedStatus is the status for a Tuned resource'
    )


class TunedList(BaseModel):
    apiVersion: Optional[str] = Field(
        None,
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources',
    )
    items: List[Tuned] = Field(
        ...,
        description='List of tuneds. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md',
    )
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds',
    )
    metadata: Optional[v1.ListMeta] = Field(
        None,
        description='Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds',
    )
