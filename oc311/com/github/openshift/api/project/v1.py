# generated by datamodel-codegen:
#   filename:  openshift-openapi-spec.json
#   timestamp: 2021-05-02T06:23:52+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field

from ......io.k8s.apimachinery.pkg.apis.meta import v1


class ProjectSpec(BaseModel):
    finalizers: Optional[List[str]] = Field(
        None,
        description='Finalizers is an opaque list of values that must be empty to permanently remove object from storage',
    )


class ProjectStatus(BaseModel):
    phase: Optional[str] = Field(
        None, description='Phase is the current lifecycle phase of the project'
    )


class Project(BaseModel):
    apiVersion: Optional[str] = Field(
        None,
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources',
    )
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds',
    )
    metadata: Optional[v1.ObjectMeta] = Field(
        None, description="Standard object's metadata."
    )
    spec: Optional[ProjectSpec] = Field(
        None, description='Spec defines the behavior of the Namespace.'
    )
    status: Optional[ProjectStatus] = Field(
        None, description='Status describes the current status of a Namespace'
    )


class ProjectList(BaseModel):
    apiVersion: Optional[str] = Field(
        None,
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources',
    )
    items: List[Project] = Field(..., description='Items is the list of projects')
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds',
    )
    metadata: Optional[v1.ListMeta] = Field(
        None, description="Standard object's metadata."
    )


class ProjectRequest(BaseModel):
    apiVersion: Optional[str] = Field(
        None,
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources',
    )
    description: Optional[str] = Field(
        None, description='Description is the description to apply to a project'
    )
    displayName: Optional[str] = Field(
        None, description='DisplayName is the display name to apply to a project'
    )
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds',
    )
    metadata: Optional[v1.ObjectMeta] = Field(
        None, description="Standard object's metadata."
    )
