# generated by datamodel-codegen:
#   filename:  openshift-openapi-spec.json
#   timestamp: 2021-05-02T06:23:52+00:00

from __future__ import annotations

from typing import Dict, List, Optional

from pydantic import BaseModel, Field

from ......io.k8s.api.core import v1 as v1_1
from ......io.k8s.apimachinery.pkg.apis.meta import v1


class ClusterResourceQuotaSelector(BaseModel):
    annotations: Dict[str, str] = Field(
        ..., description='AnnotationSelector is used to select projects by annotation.'
    )
    labels: v1.LabelSelector = Field(
        ..., description='LabelSelector is used to select projects by label.'
    )


class ResourceQuotaStatusByNamespace(BaseModel):
    namespace: str = Field(
        ..., description='Namespace the project this status applies to'
    )
    status: v1_1.ResourceQuotaStatus = Field(
        ...,
        description='Status indicates how many resources have been consumed by this project',
    )


class ClusterResourceQuotaSpec(BaseModel):
    quota: v1_1.ResourceQuotaSpec = Field(
        ..., description='Quota defines the desired quota'
    )
    selector: ClusterResourceQuotaSelector = Field(
        ...,
        description='Selector is the selector used to match projects. It should only select active projects on the scale of dozens (though it can select many more less active projects).  These projects will contend on object creation through this resource.',
    )


class ClusterResourceQuotaStatus(BaseModel):
    namespaces: List[ResourceQuotaStatusByNamespace] = Field(
        ...,
        description='Namespaces slices the usage by project.  This division allows for quick resolution of deletion reconciliation inside of a single project without requiring a recalculation across all projects.  This can be used to pull the deltas for a given project.',
    )
    total: v1_1.ResourceQuotaStatus = Field(
        ...,
        description='Total defines the actual enforced quota and its current usage across all projects',
    )


class AppliedClusterResourceQuota(BaseModel):
    apiVersion: Optional[str] = Field(
        None,
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources',
    )
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds',
    )
    metadata: v1.ObjectMeta = Field(..., description="Standard object's metadata.")
    spec: ClusterResourceQuotaSpec = Field(
        ..., description='Spec defines the desired quota'
    )
    status: Optional[ClusterResourceQuotaStatus] = Field(
        None,
        description='Status defines the actual enforced quota and its current usage',
    )


class AppliedClusterResourceQuotaList(BaseModel):
    apiVersion: Optional[str] = Field(
        None,
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources',
    )
    items: List[AppliedClusterResourceQuota] = Field(
        ..., description='Items is a list of AppliedClusterResourceQuota'
    )
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds',
    )
    metadata: Optional[v1.ListMeta] = Field(
        None, description="Standard object's metadata."
    )


class ClusterResourceQuota(BaseModel):
    apiVersion: Optional[str] = Field(
        None,
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources',
    )
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds',
    )
    metadata: v1.ObjectMeta = Field(..., description="Standard object's metadata.")
    spec: ClusterResourceQuotaSpec = Field(
        ..., description='Spec defines the desired quota'
    )
    status: Optional[ClusterResourceQuotaStatus] = Field(
        None,
        description='Status defines the actual enforced quota and its current usage',
    )


class ClusterResourceQuotaList(BaseModel):
    apiVersion: Optional[str] = Field(
        None,
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources',
    )
    items: List[ClusterResourceQuota] = Field(
        ..., description='Items is a list of ClusterResourceQuotas'
    )
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds',
    )
    metadata: Optional[v1.ListMeta] = Field(
        None, description="Standard object's metadata."
    )
